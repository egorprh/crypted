services:
  postgressql:
    container_name: postgressql
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: $DB_PASS
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    ports:
      - 5432:5432
    env_file:
      - ".env"
    networks:
      - appnetwork
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:9.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "$PGADMIN_DEFAULT_EMAIL"
      PGADMIN_DEFAULT_PASSWORD: "$PGADMIN_DEFAULT_PASSWORD"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - postgressql
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - appnetwork

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - 8000:8000
    restart: always
    networks:
      - appnetwork
    env_file:
      - ".env"
    volumes:
      - ./backend:/app
      - ./frontend/dist:/frontend/dist
    depends_on:
      postgressql:
        condition: service_healthy

networks:
  appnetwork:
    driver: bridge


# https://habr.com/ru/companies/ruvds/articles/450312/
# https://habr.com/ru/articles/578744/
