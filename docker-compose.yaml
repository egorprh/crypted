services:
  postgressql:
    container_name: free-dept-space-db
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres
      POSTGRES_DB: crypted
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"postgres\" -d \"crypted\""]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    ports:
      - 5433:5432
    env_file:
      - "backend/.env"
    networks:
      - web
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    container_name: free-dept-backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    restart: always
    networks:
      - web
    ports:
      - "8015:8015"
    env_file:
      - "backend/.env"
    environment:
      - PORT=8015
    volumes:
      - ./backend:/app/backend
      - ./frontend/dist:/app/frontend/dist
      - ./logs:/app/logs
      - ./backend/.env:/app/backend/.env
    depends_on:
      postgressql:
        condition: service_healthy
    expose:
      - "8015"



  # Бота отдельно поднял в папке root
  # telegram-bot:
  #   build:
  #     context: .
  #     dockerfile: telegram_bot/Dockerfile.bot
  #   volumes:
  #     - ./telegram_bot:/app
  #   env_file:
  #     - ".env"
  #   environment:
  #     BOT_TOKEN: $BOT_TOKEN
  #     ADMINS: $ADMINS
  #     PRIVATE_CHANNEL_ID: $PRIVATE_CHANNEL_ID
  #   depends_on:
  #     - backend

networks:
  web:
    driver: bridge


# https://habr.com/ru/companies/ruvds/articles/450312/
# https://habr.com/ru/articles/578744/
# docker-compose build --no-cache

