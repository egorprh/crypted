#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤.
"""

import sys
import os
import subprocess
from pathlib import Path

def run_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã."""
    # –î–æ–±–∞–≤–ª—è–µ–º backend –≤ sys.path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
    backend_path = Path(__file__).parent.parent / "backend"
    if str(backend_path) not in sys.path:
        sys.path.insert(0, str(backend_path))
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    tests_dir = Path(__file__).parent
    test_files = []
    
    for file_path in tests_dir.glob("test_*.py"):
        if file_path.is_file() and file_path.name != "__init__.py":
            test_files.append(file_path.name)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –∑–∞–ø—É—Å–∫–∞
    test_files.sort()
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(test_files)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    for test_file in test_files:
        print(f"   - {test_file}")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º pytest –¥–ª—è –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    for test_file in test_files:
        test_path = tests_dir / test_file
        print(f"\n=== –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–∑ {test_file} ===")
        result = subprocess.run([
            sys.executable, "-m", "pytest", str(test_path), "-v"
        ], cwd=backend_path)
        
        if result.returncode != 0:
            print(f"‚ùå –¢–µ—Å—Ç—ã –≤ {test_file} –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            return False
        else:
            print(f"‚úÖ –¢–µ—Å—Ç—ã –≤ {test_file} –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    success = run_tests()
    sys.exit(0 if success else 1)
